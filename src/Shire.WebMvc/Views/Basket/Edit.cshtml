@model Shire.WebMvc.Entities.Basket

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit</h1>

<h4>Basket</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form id="editForm" asp-action="Edit" asp-controller="Basket" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" id="quantityInput" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a href="javascript:history.back()">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var editForm = document.getElementById('editForm');
            if (!editForm) {
                return;
            }

            editForm.addEventListener('submit', function (event) {
                event.preventDefault();

                var quantityInput = document.getElementById('quantityInput');
                if (!quantityInput) {
                    return;
                }

                var quantityValue = quantityInput.value;
                var editUrl = '@Url.Action("Edit", "Basket", new { id = Model.Id })';

                fetch(editUrl, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': '@Html.AntiForgeryToken()'
                    },
                    body: JSON.stringify({
                        Id: @Model.Id,
                        Quantity: quantityValue
                    })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        window.location.href = '@Url.Action("Index", "Basket", new { userId = Model.UserId })';
                    })
                    .catch(error => {
                        console.error('Fetch operation error:', error);
                    });
            });
        });
    </script>
}

